services:
  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - iceberg_net
    volumes:
      - minio_data:/data
    restart: unless-stopped

  mc:
    image: bitnami/minio-client:latest
    container_name: mc
    depends_on:
      - minio
    networks:
      - iceberg_net
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
    entrypoint: /bin/sh -c "
      until mc alias set minio http://minio:9000 $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD}; do
      echo 'Waiting for MinIO...'; sleep 1;
      done;
      mc rm -r --force minio/warehouse || true;
      mc mb minio/warehouse;
      echo 'MinIO bucket initialized';
      exit 0
      "
    restart: on-failure

  product-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: product-service
    ports:
      - "8080:8080"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_ENDPOINT=http://minio:9000
      - JAVA_OPTS=-Dhadoop.home.dir=/opt/hadoop
    depends_on:
      - minio
      - mc
    networks:
      - iceberg_net
    restart: unless-stopped

volumes:
  minio_data:

networks:
  iceberg_net:
    driver: bridge